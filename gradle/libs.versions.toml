[versions]
agp = "8.3.2"
kotlin = "1.9.23"
compose = "1.6.5"
compose-compiler = "1.5.4"
compose-material3 = "1.1.2"
androidx-activityCompose = "1.8.2"
ktor = "2.3.10"
coroutines = "1.8.0"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
compose-plugin = "1.6.2"
mapsMobile = "4.5.1-full"
precompose = "1.6.0"
koinVersion = "3.5.4"
koinCompose = "1.0.4"
composeDialogs = "0.9.5"
accompanistPermissions = "0.34.0"
kamel = "0.9.4"
sqlDelight = "2.0.2"
datetime = "0.6.0-RC.2"
multiplatformSettings = "1.1.1"
charts = "Beta-0.0.5"
resources = "0.24.0-beta-1"
mokoGeo = "0.6.0"
logging = "1.4.2"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
#androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
#androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
maps-mobile = { module = "com.yandex.android:maps.mobile", version.ref = "mapsMobile" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinVersion" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }

tlaster-precompose = { module = "moe.tlaster:precompose", version.ref = "precompose" }
tlaster-precompose-viewmodel = { module = "moe.tlaster:precompose-viewmodel", version.ref = "precompose" }
tlaster-precompose-koin = { module = "moe.tlaster:precompose-koin", version.ref = "precompose" }

compose-material-dialogs = { module = "ca.gosyer:compose-material-dialogs-core", version.ref = "composeDialogs" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }

kamel = { module = "media.kamel:kamel-image", version.ref = "kamel" }

sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight-ios = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
settings-multiplatform = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }

aay-chart = { module = "io.github.thechance101:chart", version.ref = "charts" }

moko-resources = { module = "dev.icerock.moko:resources", version.ref = "resources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "resources" }

moko-geo = { module =  "dev.icerock.moko:geo", version.ref = "mokoGeo" }
moko-geo-compose = { module = "dev.icerock.moko:geo-compose", version.ref = "mokoGeo" }

lighthouse-logging = { module = "org.lighthousegames:logging", version.ref = "logging" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
multiplatformResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "resources" }
